/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 PC.glb -t -T 
Files: PC.glb [13.15KB] > PC-transformed.glb [6.23KB] (53%)
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    PC: THREE.Mesh
  }
  materials: {
    Mat: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function PC(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/PC-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.PC.geometry} material={materials.Mat} />
    </group>
  )
}

useGLTF.preload('/PC-transformed.glb')
